buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://maven.fabric.io/public'
        }
    }
    dependencies {
        classpath 'org.pegdown:pegdown:1.6.0'
        //noinspection GradleDynamicVersion
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'de.greenrobot:greendao-generator:2.0.0'
    }
}

repositories {
    maven {
        url 'https://maven.fabric.io/public'
    }
}


import de.greenrobot.daogenerator.DaoGenerator
import de.greenrobot.daogenerator.Entity
import de.greenrobot.daogenerator.Schema
import org.pegdown.PegDownProcessor

/*
generate HTML-files from Markdown-files for including them in the app
 */
task releaseNotes() {
    def processor = new PegDownProcessor()

    new File('app/src/main/assets/about.html').withWriter('UTF-8') { w ->
        w.write(processor.markdownToHtml(new File("ABOUT.md").text))
    }

    new File('app/src/main/assets/changelog.html').withWriter('UTF-8') { w ->
        w.write(processor.markdownToHtml(new File("CHANGELOG.md").text))
    }
}

task generateDao() {
    Schema schema = new Schema(1, "de.eightbitboy.hijacr.data.dao")
    schema.enableKeepSectionsByDefault()

    Entity comic = schema.addEntity("Comic")
    comic.addIdProperty()
    comic.addStringProperty("key").notNull()
    comic.addStringProperty("title").notNull()
    comic.addStringProperty("url").notNull()
    comic.addStringProperty("firstUrl").notNull()
    comic.addStringProperty("lastUrl")
    comic.addStringProperty("recentUrl")
    comic.addStringProperty("imageQuery").notNull()
    comic.addStringProperty("previousQuery").notNull()
    comic.addStringProperty("nextQuery").notNull()
    comic.addBooleanProperty("hidden").notNull()

    new DaoGenerator().generateAll(schema, "app/src/main/java")
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "de.eightbitboy.hijacr"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 3
        versionName "0.1.2"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    packagingOptions {
        exclude 'LICENSE.txt'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    /*
    android libraries
     */
    compile 'com.android.support:appcompat-v7:23.1.0'
    compile 'com.android.support:design:23.1.0'
    compile 'com.android.support:support-annotations:23.1.0' //TODO use this

    /*
    third-party libraries
     */
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'de.greenrobot:greendao:2.0.0'
    compile 'de.greenrobot:greendao-generator:2.0.0'
    compile 'org.sufficientlysecure:html-textview:1.3'
    compile 'org.jsoup:jsoup:1.8.3'
    compile 'com.orhanobut:logger:1.11'
    compile 'com.github.chrisbanes.photoview:library:1.2.4'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.4'

    compile('com.crashlytics.sdk.android:crashlytics:2.5.2@aar') {
        transitive = true;
    }

    /*
    testing
     */
    androidTestCompile 'com.android.support:support-annotations:23.1.0'
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
}
